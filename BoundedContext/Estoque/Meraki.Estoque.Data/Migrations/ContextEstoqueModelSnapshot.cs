// <auto-generated />
using System;
using Meraki.Estoque.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Meraki.Estoque.Data.Migrations
{
    [DbContext(typeof(ContextEstoque))]
    partial class ContextEstoqueModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Meraki.Estoque.Domain.Estoques.ItemEstoque", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_atualizacao");

                    b.Property<Guid>("IdItem")
                        .HasColumnType("uuid")
                        .HasColumnName("id_item");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("saldo");

                    b.HasKey("Id");

                    b.HasIndex("IdItem");

                    b.ToTable("item_estoque", (string)null);
                });

            modelBuilder.Entity("Meraki.Estoque.Domain.Itens.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ativo");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("descricao");

                    b.Property<Guid>("IdUnidade")
                        .HasColumnType("uuid")
                        .HasColumnName("id_unidade");

                    b.Property<int>("Identificacao")
                        .HasColumnType("integer")
                        .HasColumnName("identificacao");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("preco");

                    b.HasKey("Id");

                    b.HasIndex("IdUnidade");

                    b.ToTable("item", (string)null);
                });

            modelBuilder.Entity("Meraki.Estoque.Domain.Unidades.Unidade", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("descricao");

                    b.Property<decimal>("Fator")
                        .HasColumnType("decimal(18,6)")
                        .HasColumnName("fator");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("sigla");

                    b.HasKey("Id");

                    b.ToTable("unidadade", (string)null);
                });

            modelBuilder.Entity("Meraki.Estoque.Domain.Estoques.ItemEstoque", b =>
                {
                    b.HasOne("Meraki.Estoque.Domain.Itens.Item", "Item")
                        .WithMany()
                        .HasForeignKey("IdItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Meraki.Estoque.Domain.Itens.Item", b =>
                {
                    b.HasOne("Meraki.Estoque.Domain.Unidades.Unidade", "Unidade")
                        .WithMany()
                        .HasForeignKey("IdUnidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unidade");
                });
#pragma warning restore 612, 618
        }
    }
}
