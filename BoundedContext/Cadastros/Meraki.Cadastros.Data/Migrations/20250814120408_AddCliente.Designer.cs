// <auto-generated />
using System;
using Meraki.Cadastros.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Meraki.Cadastros.Data.Migrations
{
    [DbContext(typeof(ContextCadastros))]
    [Migration("20250814120408_AddCliente")]
    partial class AddCliente
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Meraki.Cadastros.Domain.Clientes.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("nome");

                    b.Property<int>("TipoPessoa")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_pessoa");

                    b.HasKey("Id");

                    b.ToTable("cliente", (string)null);
                });

            modelBuilder.Entity("Meraki.Cadastros.Domain.Clientes.Cliente", b =>
                {
                    b.OwnsOne("Meraki.Cadastros.Domain.Clientes.ClienteContato", "Contato", b1 =>
                        {
                            b1.Property<Guid>("ClienteId")
                                .HasColumnType("uuid");

                            b1.HasKey("ClienteId");

                            b1.ToTable("cliente");

                            b1.WithOwner()
                                .HasForeignKey("ClienteId");

                            b1.OwnsOne("Meraki.Cadastros.Domain.Value_Objects.Celular", "Celular", b2 =>
                                {
                                    b2.Property<Guid>("ClienteContatoClienteId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Numero")
                                        .IsRequired()
                                        .HasMaxLength(20)
                                        .HasColumnType("character varying(20)")
                                        .HasColumnName("celular");

                                    b2.HasKey("ClienteContatoClienteId");

                                    b2.ToTable("cliente");

                                    b2.WithOwner()
                                        .HasForeignKey("ClienteContatoClienteId");
                                });

                            b1.OwnsOne("Meraki.Cadastros.Domain.Value_Objects.Email", "Email", b2 =>
                                {
                                    b2.Property<Guid>("ClienteContatoClienteId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Endereco")
                                        .IsRequired()
                                        .HasMaxLength(200)
                                        .HasColumnType("character varying(200)")
                                        .HasColumnName("email");

                                    b2.HasKey("ClienteContatoClienteId");

                                    b2.ToTable("cliente");

                                    b2.WithOwner()
                                        .HasForeignKey("ClienteContatoClienteId");
                                });

                            b1.OwnsOne("Meraki.Cadastros.Domain.Value_Objects.Telefone", "Telefone", b2 =>
                                {
                                    b2.Property<Guid>("ClienteContatoClienteId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Numero")
                                        .IsRequired()
                                        .HasMaxLength(20)
                                        .HasColumnType("character varying(20)")
                                        .HasColumnName("telefone");

                                    b2.HasKey("ClienteContatoClienteId");

                                    b2.ToTable("cliente");

                                    b2.WithOwner()
                                        .HasForeignKey("ClienteContatoClienteId");
                                });

                            b1.Navigation("Celular")
                                .IsRequired();

                            b1.Navigation("Email")
                                .IsRequired();

                            b1.Navigation("Telefone");
                        });

                    b.OwnsOne("Meraki.Cadastros.Domain.Clientes.ClienteEndereco", "Endereco", b1 =>
                        {
                            b1.Property<Guid>("ClienteId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Bairro")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("bairro");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("cidade");

                            b1.Property<string>("Complemento")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("complemento");

                            b1.Property<string>("Logradouro")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("character varying(200)")
                                .HasColumnName("logradouro");

                            b1.Property<string>("Numero")
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)")
                                .HasColumnName("numero");

                            b1.Property<string>("Uf")
                                .IsRequired()
                                .HasMaxLength(2)
                                .HasColumnType("character varying(2)")
                                .HasColumnName("estado");

                            b1.HasKey("ClienteId");

                            b1.ToTable("cliente");

                            b1.WithOwner()
                                .HasForeignKey("ClienteId");

                            b1.OwnsOne("Meraki.Cadastros.Domain.Value_Objects.Cep", "Cep", b2 =>
                                {
                                    b2.Property<Guid>("ClienteEnderecoClienteId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Numero")
                                        .IsRequired()
                                        .HasMaxLength(10)
                                        .HasColumnType("character varying(10)")
                                        .HasColumnName("cep");

                                    b2.HasKey("ClienteEnderecoClienteId");

                                    b2.ToTable("cliente");

                                    b2.WithOwner()
                                        .HasForeignKey("ClienteEnderecoClienteId");
                                });

                            b1.Navigation("Cep")
                                .IsRequired();
                        });

                    b.OwnsOne("Meraki.Cadastros.Domain.Clientes.DadosCorporativo", "DadosCorporativo", b1 =>
                        {
                            b1.Property<Guid>("ClienteId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Cnpj")
                                .IsRequired()
                                .HasMaxLength(14)
                                .HasColumnType("character varying(14)")
                                .HasColumnName("cnpj");

                            b1.Property<string>("InscricaoEstadual")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)")
                                .HasColumnName("inscricao_estadual");

                            b1.Property<string>("InscricaoMunicipal")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)")
                                .HasColumnName("inscricao_municipal");

                            b1.Property<string>("NomeFantasia")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("character varying(200)")
                                .HasColumnName("nome_fantasia");

                            b1.Property<string>("RazaoSocial")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("character varying(200)")
                                .HasColumnName("razao_social");

                            b1.HasKey("ClienteId");

                            b1.ToTable("cliente");

                            b1.WithOwner()
                                .HasForeignKey("ClienteId");
                        });

                    b.OwnsOne("Meraki.Cadastros.Domain.Value_Objects.Cpf", "Cpf", b1 =>
                        {
                            b1.Property<Guid>("ClienteId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasMaxLength(11)
                                .HasColumnType("character varying(11)")
                                .HasColumnName("cpf");

                            b1.HasKey("ClienteId");

                            b1.ToTable("cliente");

                            b1.WithOwner()
                                .HasForeignKey("ClienteId");
                        });

                    b.Navigation("Contato")
                        .IsRequired();

                    b.Navigation("Cpf");

                    b.Navigation("DadosCorporativo");

                    b.Navigation("Endereco")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
