// <auto-generated />
using System;
using Meraki.Cadastros.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Meraki.Cadastros.Data.Migrations
{
    [DbContext(typeof(ContextCadastros))]
    [Migration("20250913120323_ajustecliente")]
    partial class ajustecliente
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Meraki.Cadastros.Domain.Clientes.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("nome");

                    b.Property<int>("TipoPessoa")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_pessoa");

                    b.HasKey("Id");

                    b.ToTable("cliente", (string)null);
                });

            modelBuilder.Entity("Meraki.Cadastros.Domain.Clientes.ClienteContato", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.HasKey("Id");

                    b.ToTable("cliente_contato", (string)null);
                });

            modelBuilder.Entity("Meraki.Cadastros.Domain.Clientes.ClienteEndereco", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("bairro");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("cidade");

                    b.Property<string>("Complemento")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("complemento");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("logradouro");

                    b.Property<string>("Numero")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("numero");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("estado");

                    b.HasKey("Id");

                    b.ToTable("cliente_endereco", (string)null);
                });

            modelBuilder.Entity("Meraki.Cadastros.Domain.Clientes.DadosCorporativo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Cnpj")
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("cnpj");

                    b.Property<string>("InscricaoEstadual")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("inscricao_estadual");

                    b.Property<string>("InscricaoMunicipal")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("inscricao_municipal");

                    b.Property<string>("NomeFantasia")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("nome_fantasia");

                    b.Property<string>("RazaoSocial")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("razao_social");

                    b.HasKey("Id");

                    b.ToTable("cliente_dados_corporativo", (string)null);
                });

            modelBuilder.Entity("Meraki.Cadastros.Domain.Clientes.Cliente", b =>
                {
                    b.OwnsOne("Meraki.Cadastros.Domain.Value_Objects.Cpf", "Cpf", b1 =>
                        {
                            b1.Property<Guid>("ClienteId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasMaxLength(11)
                                .HasColumnType("character varying(11)")
                                .HasColumnName("cpf");

                            b1.HasKey("ClienteId");

                            b1.ToTable("cliente");

                            b1.WithOwner()
                                .HasForeignKey("ClienteId");
                        });

                    b.Navigation("Cpf");
                });

            modelBuilder.Entity("Meraki.Cadastros.Domain.Clientes.ClienteContato", b =>
                {
                    b.HasOne("Meraki.Cadastros.Domain.Clientes.Cliente", "Cliente")
                        .WithOne("Contato")
                        .HasForeignKey("Meraki.Cadastros.Domain.Clientes.ClienteContato", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Meraki.Cadastros.Domain.Value_Objects.Celular", "Celular", b1 =>
                        {
                            b1.Property<Guid>("ClienteContatoId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)")
                                .HasColumnName("celular");

                            b1.HasKey("ClienteContatoId");

                            b1.ToTable("cliente_contato");

                            b1.WithOwner()
                                .HasForeignKey("ClienteContatoId");
                        });

                    b.OwnsOne("Meraki.Cadastros.Domain.Value_Objects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("ClienteContatoId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Endereco")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("character varying(200)")
                                .HasColumnName("email");

                            b1.HasKey("ClienteContatoId");

                            b1.ToTable("cliente_contato");

                            b1.WithOwner()
                                .HasForeignKey("ClienteContatoId");
                        });

                    b.OwnsOne("Meraki.Cadastros.Domain.Value_Objects.Telefone", "Telefone", b1 =>
                        {
                            b1.Property<Guid>("ClienteContatoId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Numero")
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)")
                                .HasColumnName("telefone");

                            b1.HasKey("ClienteContatoId");

                            b1.ToTable("cliente_contato");

                            b1.WithOwner()
                                .HasForeignKey("ClienteContatoId");
                        });

                    b.Navigation("Celular");

                    b.Navigation("Cliente");

                    b.Navigation("Email");

                    b.Navigation("Telefone");
                });

            modelBuilder.Entity("Meraki.Cadastros.Domain.Clientes.ClienteEndereco", b =>
                {
                    b.HasOne("Meraki.Cadastros.Domain.Clientes.Cliente", "Cliente")
                        .WithOne("Endereco")
                        .HasForeignKey("Meraki.Cadastros.Domain.Clientes.ClienteEndereco", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Meraki.Cadastros.Domain.Value_Objects.Cep", "Cep", b1 =>
                        {
                            b1.Property<Guid>("ClienteEnderecoId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("character varying(10)")
                                .HasColumnName("cep");

                            b1.HasKey("ClienteEnderecoId");

                            b1.ToTable("cliente_endereco");

                            b1.WithOwner()
                                .HasForeignKey("ClienteEnderecoId");
                        });

                    b.Navigation("Cep");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Meraki.Cadastros.Domain.Clientes.DadosCorporativo", b =>
                {
                    b.HasOne("Meraki.Cadastros.Domain.Clientes.Cliente", "Cliente")
                        .WithOne("DadosCorporativo")
                        .HasForeignKey("Meraki.Cadastros.Domain.Clientes.DadosCorporativo", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Meraki.Cadastros.Domain.Clientes.Cliente", b =>
                {
                    b.Navigation("Contato");

                    b.Navigation("DadosCorporativo");

                    b.Navigation("Endereco");
                });
#pragma warning restore 612, 618
        }
    }
}
